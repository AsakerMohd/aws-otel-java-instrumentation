on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Build snapshot with Gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: build snapshot
        env:
          PUBLISH_USERNAME: ${{ github.actor }}
          PUBLISH_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: aws-opentelemetry-agent.jar
          path: otelagent/build/libs/aws-opentelemetry-agent-*.jar
  build-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Package Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.repository }} --password-stdin
      - name: Build docker image
        run: docker build -t docker.pkg.github.com/anuraaga/aws-opentelemetry-java-instrumentation/aws-opentelemetry-java-base:master .
      - name: Push docker image
        run: docker push docker.pkg.github.com/anuraaga/aws-opentelemetry-java-instrumentation/aws-opentelemetry-java-base:master
  build-smoke-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            spring-boot:
              - 'smoke-tests/spring-boot/**/*'
      - name: Login to GitHub Package Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.repository }} --password-stdin
      - name: Build and push spring-boot smoke-tests
        uses: burrunan/gradle-cache-action@v1
        if: steps.filter.outputs.spring-boot == 'true'
        with:
          arguments: :smoke-tests:spring-boot:jib
